{"version":3,"file":"utils-8e9180ab.js","sources":["../src/-private/utils.ts"],"sourcesContent":["import type ContextRegistry from '../context-registry';\nimport {\n  dependencySatisfies,\n  importSync,\n  macroCondition,\n} from '@embroider/macros';\nimport { isDestroying, isDestroyed } from '@ember/destroyable';\nimport type Owner from '@ember/owner';\n\nlet getOwner: (context: unknown) => Owner | undefined;\n\nif (macroCondition(dependencySatisfies('ember-source', '>=4.10.0'))) {\n  getOwner = (importSync('@ember/owner') as any).getOwner;\n} else {\n  getOwner = (importSync('@ember/application') as any).getOwner;\n}\n\n// TODO: See if we can type the owner\nexport function getProvider(owner: any, contextKey: keyof ContextRegistry) {\n  const appOwner = getOwner(owner);\n\n  // We can't call .lookup on a destroyed owner\n  if (isDestroyed(appOwner as any) || isDestroying(appOwner as any)) {\n    return null;\n  }\n\n  const renderer = appOwner?.lookup('renderer:-dom') as any;\n\n  if (renderer == null) {\n    return null;\n  }\n\n  // In Ember 6 the path to env is renderer._context.env,\n  // before that it was renderer._runtime.env\n  const env = renderer._runtime?.env ?? renderer._context?.env;\n  const provideConsumeContextContainer = env?.provideConsumeContextContainer;\n\n  if (provideConsumeContextContainer == null) {\n    return null;\n  }\n\n  const contextsObject = provideConsumeContextContainer.contextsFor(owner);\n  return contextsObject?.[contextKey];\n}\n\nexport function hasContext(owner: any, contextKey: keyof ContextRegistry) {\n  const provider = getProvider(owner, contextKey);\n  return provider != null;\n}\n\nexport function getContextValue<K extends keyof ContextRegistry>(\n  owner: any,\n  contextKey: K,\n): ContextRegistry[K] | undefined {\n  if (!hasContext(owner, contextKey)) {\n    return undefined;\n  }\n  const providerObj = getProvider(owner, contextKey);\n  return providerObj.instance[providerObj.key];\n}\n"],"names":["getOwner","macroCondition","dependencySatisfies","importSync","getProvider","owner","contextKey","appOwner","isDestroyed","isDestroying","renderer","lookup","env","_runtime","_context","provideConsumeContextContainer","contextsObject","contextsFor","hasContext","provider","getContextValue","undefined","providerObj","instance","key"],"mappings":";;;AASA,IAAIA,QAAiD,CAAA;AAErD,IAAIC,cAAc,CAACC,mBAAmB,CAAC,cAAc,EAAE,UAAU,CAAC,CAAC,EAAE;AACnEF,EAAAA,QAAQ,GAAIG,UAAU,CAAC,cAAc,CAAC,CAASH,QAAQ,CAAA;AACzD,CAAC,MAAM;AACLA,EAAAA,QAAQ,GAAIG,UAAU,CAAC,oBAAoB,CAAC,CAASH,QAAQ,CAAA;AAC/D,CAAA;;AAEA;AACO,SAASI,WAAWA,CAACC,KAAU,EAAEC,UAAiC,EAAE;AACzE,EAAA,MAAMC,QAAQ,GAAGP,QAAQ,CAACK,KAAK,CAAC,CAAA;;AAEhC;EACA,IAAIG,WAAW,CAACD,QAAe,CAAC,IAAIE,YAAY,CAACF,QAAe,CAAC,EAAE;AACjE,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA,EAAA,MAAMG,QAAQ,GAAGH,QAAQ,EAAEI,MAAM,CAAC,eAAe,CAAQ,CAAA;EAEzD,IAAID,QAAQ,IAAI,IAAI,EAAE;AACpB,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;;AAEA;AACA;AACA,EAAA,MAAME,GAAG,GAAGF,QAAQ,CAACG,QAAQ,EAAED,GAAG,IAAIF,QAAQ,CAACI,QAAQ,EAAEF,GAAG,CAAA;AAC5D,EAAA,MAAMG,8BAA8B,GAAGH,GAAG,EAAEG,8BAA8B,CAAA;EAE1E,IAAIA,8BAA8B,IAAI,IAAI,EAAE;AAC1C,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA,EAAA,MAAMC,cAAc,GAAGD,8BAA8B,CAACE,WAAW,CAACZ,KAAK,CAAC,CAAA;EACxE,OAAOW,cAAc,GAAGV,UAAU,CAAC,CAAA;AACrC,CAAA;AAEO,SAASY,UAAUA,CAACb,KAAU,EAAEC,UAAiC,EAAE;AACxE,EAAA,MAAMa,QAAQ,GAAGf,WAAW,CAACC,KAAK,EAAEC,UAAU,CAAC,CAAA;EAC/C,OAAOa,QAAQ,IAAI,IAAI,CAAA;AACzB,CAAA;AAEO,SAASC,eAAeA,CAC7Bf,KAAU,EACVC,UAAa,EACmB;AAChC,EAAA,IAAI,CAACY,UAAU,CAACb,KAAK,EAAEC,UAAU,CAAC,EAAE;AAClC,IAAA,OAAOe,SAAS,CAAA;AAClB,GAAA;AACA,EAAA,MAAMC,WAAW,GAAGlB,WAAW,CAACC,KAAK,EAAEC,UAAU,CAAC,CAAA;AAClD,EAAA,OAAOgB,WAAW,CAACC,QAAQ,CAACD,WAAW,CAACE,GAAG,CAAC,CAAA;AAC9C;;;;"}